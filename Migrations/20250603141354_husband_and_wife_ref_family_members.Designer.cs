// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using familytree_api.Database;

#nullable disable

namespace familytree_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250603141354_husband_and_wife_ref_family_members")]
    partial class husband_and_wife_ref_family_members
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("familytree_api.Models.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("origin");

                    b.HasKey("Id");

                    b.ToTable("family");
                });

            modelBuilder.Entity("familytree_api.Models.FamilyMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Born")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("born");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Died")
                        .HasColumnType("longtext")
                        .HasColumnName("died");

                    b.Property<int>("FamilyId")
                        .HasColumnType("int")
                        .HasColumnName("family_id");

                    b.Property<int?>("FatherId")
                        .HasColumnType("int")
                        .HasColumnName("father_id");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext")
                        .HasColumnName("gender");

                    b.Property<int?>("MotherId")
                        .HasColumnType("int")
                        .HasColumnName("mother_id");

                    b.Property<bool>("ShowInTree")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("show_in_tree");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.HasIndex("FatherId");

                    b.HasIndex("MotherId");

                    b.HasIndex("UserId");

                    b.ToTable("family_member");
                });

            modelBuilder.Entity("familytree_api.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("FamilyMemberId")
                        .HasColumnType("int")
                        .HasColumnName("family_member_id");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("path");

                    b.HasKey("Id");

                    b.HasIndex("FamilyMemberId");

                    b.ToTable("image");
                });

            modelBuilder.Entity("familytree_api.Models.Partner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Divorced")
                        .HasColumnType("longtext")
                        .HasColumnName("divorced");

                    b.Property<int>("HusbandId")
                        .HasColumnType("int")
                        .HasColumnName("husband_id");

                    b.Property<string>("Married")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("married");

                    b.Property<int>("WifeId")
                        .HasColumnType("int")
                        .HasColumnName("wife_id");

                    b.HasKey("Id");

                    b.HasIndex("HusbandId");

                    b.HasIndex("WifeId");

                    b.ToTable("partner");
                });

            modelBuilder.Entity("familytree_api.Models.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("token");
                });

            modelBuilder.Entity("familytree_api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("email_verified");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("last_name");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("middle_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("familytree_api.Models.FamilyMember", b =>
                {
                    b.HasOne("familytree_api.Models.Family", "Family")
                        .WithMany()
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("familytree_api.Models.FamilyMember", "Father")
                        .WithMany()
                        .HasForeignKey("FatherId");

                    b.HasOne("familytree_api.Models.FamilyMember", "Mother")
                        .WithMany()
                        .HasForeignKey("MotherId");

                    b.HasOne("familytree_api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Family");

                    b.Navigation("Father");

                    b.Navigation("Mother");

                    b.Navigation("User");
                });

            modelBuilder.Entity("familytree_api.Models.Image", b =>
                {
                    b.HasOne("familytree_api.Models.FamilyMember", "FamilyMember")
                        .WithMany()
                        .HasForeignKey("FamilyMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FamilyMember");
                });

            modelBuilder.Entity("familytree_api.Models.Partner", b =>
                {
                    b.HasOne("familytree_api.Models.FamilyMember", "Husband")
                        .WithMany()
                        .HasForeignKey("HusbandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("familytree_api.Models.FamilyMember", "Wife")
                        .WithMany()
                        .HasForeignKey("WifeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Husband");

                    b.Navigation("Wife");
                });

            modelBuilder.Entity("familytree_api.Models.Token", b =>
                {
                    b.HasOne("familytree_api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
